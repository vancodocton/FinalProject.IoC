name: "Terraform Apply for Production"

on:
  push:
    branches: ["prod**"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  checkov:
    name: Run Checkov code analysis
    uses: ./.github/workflows/checkov.yml

  terraform-apply:
    name: "Terraform Apply"
    needs: [checkov]
    runs-on: ubuntu-latest
    environment: production
    env:
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_resource_group_name: ${{ secrets.TF_VAR_RESOURCE_GROUP_NAME }}
      TF_VAR_resource_group_location: ${{ secrets.TF_VAR_RESOURCE_GROUP_LOCATION }}
      TF_VAR_POSTGRES_SERVER_NAME: ${{ secrets.TF_VAR_POSTGRES_SERVER_NAME }}
      TF_VAR_POSTGRES_SERVER_ADMINISTRATOR_LOGIN: ${{ secrets.TF_VAR_POSTGRES_SERVER_ADMINISTRATOR_LOGIN }}
      TF_VAR_IDSV_IDENTITY_DB_CONNECTION_STRING_NAME: ${{ secrets.TF_VAR_IDSV_IDENTITY_DB_CONNECTION_STRING_NAME }}
      TF_INF_ENV: Prod
      TF_BACKEND_KEY: finalproject.prod.terraform.tfstate

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init -backend-config="key=${{ env.TF_BACKEND_KEY }}" -input=false

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false -out main.tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false main.tfplan
