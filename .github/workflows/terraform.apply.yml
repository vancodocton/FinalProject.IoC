name: "Terraform Apply"

on:
  workflow_call:
    inputs:
      terraform_workspace:
        description: The name of Terraform Workspace
        type: string
        default: "default"
      terraform_plan_args:
        description: The additional agruments for terraform plan
        type: string
        required: false
      github_environment:
        description: The name of GitHub Environment for deployment
        type: string
        required: true
    secrets:
      TF_API_TOKEN:
        required: false
      ARM_ACCESS_KEY:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_CLIENT_ID:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      resource_group_name:
        required: true
      resource_group_location:
        required: true
      POSTGRES_SERVER_NAME:
        required: true
      POSTGRES_SERVER_ADMINISTRATOR_LOGIN:
        required: true
      IDSV_IDENTITY_DB_CONNECTION_STRING_NAME:
        required: true

permissions:
  contents: read

jobs:
  apply:
    name: "Generate Plan and Apply"
    runs-on: ubuntu-latest
    environment: ${{ inputs.github_environment }}
    env:
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_resource_group_name: ${{ secrets.resource_group_name }}
      TF_VAR_resource_group_location: ${{ secrets.resource_group_location }}
      TF_VAR_POSTGRES_SERVER_NAME: ${{ secrets.POSTGRES_SERVER_NAME }}
      TF_VAR_POSTGRES_SERVER_ADMINISTRATOR_LOGIN: ${{ secrets.POSTGRES_SERVER_ADMINISTRATOR_LOGIN }}
      TF_VAR_IDSV_IDENTITY_DB_CONNECTION_STRING_NAME: ${{ secrets.IDSV_IDENTITY_DB_CONNECTION_STRING_NAME }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Workspace
        run: terraform workspace select ${{ inputs.terraform_workspace}}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false -out default.tfplan ${{ inputs.terraform_plan_args }}

      - name: Terraform Apply
        run: terraform apply -input=false default.tfplan
